button,
label,
select,
summary,
[role="button"],
[role="option"],
label[for="toggle-mobile-preview"] {
  cursor: pointer;
}

input,
button,
textarea,
select,
a[role="button"],
label[for="toggle-mobile-preview"],
summary {
  font: inherit;
  color: inherit;
  border: var(--border-primary);
  border-radius: var(--border-radius);
  padding-inline: var(--space-2xs);
  padding-block: var(--space-3xs);
}

input,
textarea,
select {
  background-color: var(--bg-primary);
}

textarea {
  resize: vertical;
}

input[type="file"] {
  inline-size: 100%;
}

input[type="color"] {
  padding: 0;
}

a[role="button"] {
  display: inline-block;
  max-inline-size: fit-content;
  text-decoration: none;
}

summary {
  max-inline-size: fit-content;
}

button,
a[role="button"],
label[for="toggle-mobile-preview"],
summary {
  background-color: var(--bg-secondary);
}

:is(button, a[role="button"], label[for="toggle-mobile-preview"], summary):hover {
  background-color: var(--bg-tertiary);
}

:is(a, button, input, textarea, select, summary):focus,
#toggle-mobile-preview:checked + label {
  outline: 0.125rem solid var(--color-accent);
  outline-offset: 0.25rem;
}

form {
  display: flex;
  flex-direction: column;
  gap: var(--space-s);
}

form > button[type="submit"] {
  max-inline-size: 30ch;
}

form label {
  display: flex;
  flex-direction: column;
  gap: var(--space-2xs);
  max-inline-size: 30ch;
}

form label:has(textarea) {
  max-inline-size: 75ch;
}

form .file-field {
  display: flex;
  align-items: end;
  gap: var(--space-2xs);
  flex-wrap: wrap;
}
